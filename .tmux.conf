#default shell should always be bash
set-option -g default-shell /bin/bash
#set -g default-terminal xterm
#set -g default-terminal xterm-256color
set -g default-terminal screen-256color

#renumber windows if there is a number missing in between
set-option -g renumber-windows on

#set -g status-utf8 on
set -g status-keys vi
set -g status-interval 1

set -g prefix `
bind `     send-key `

#F1 will move to copy mode
bind-key -n F1 copy
#Send the keyword go. Useful in isql, vim
#bind-key -n F3 send "go" C-m
#Search upwards for 1> to look for last isql output in the current scroll buffer
#bind-key -n F4 send-keys "?1>" C-m
#Sanitize the copy buffer to remove the prompt numbers from isql session.
# Usage: select and copy isql commands normally, press F6 to sanitize it ; paste it
#bind-key -n F6 save-buffer /tmp/tmux.tx \; \
#		run-shell -b 'sed -i "s/^[0-9]\+>//" /tmp/tmux.tx' \; \
#		display-message "Done" \; \
#		load-buffer /tmp/tmux.tx \; \
#		paste-buffer \;

#F9 will zoom the current pane inside the window
bind-key -n F9  resize-pane -Z
#previous and next window
bind-key -n "C-Left" prev
bind-key -n "C-right" next-window
bind-key -n "M-F11" select-pane -L
bind-key -n "M-F12" select-pane -R
bind-key -n "M-F9" select-pane -U
bind-key -n "M-F10" select-pane -D
#switch to next pane in current window and zoom in
bind-key -n F8 select-pane -t :.+ \; resize-pane -Z

#open new session from within tmux
bind-key ^ new-session

#split the current window horizontally/vertically
bind-key | split-window -h
bind-key _ split-window -v
#faster response
set -s escape-time 0
#huge scroll buffer
set -g history-limit 100000
#set -g history-limit 1000
#when in scroll buffer, use vim like keybinding to search
set-window-option -g mode-keys vi

#mouse capability
set -g mouse on
#set -g mode-mouse on
#set -g mouse-resize-pane on
#set -g mouse-select-pane on
#set -g mouse-select-window on
#set-option -g mouse-utf8 on
#setw -g mode-mouse on

#color etc. at the bottom
#set -g status-fg '#FFFFFF'
set -g status-fg '#111111'
set -g status-bg '#aaaaaa'
#set -g status-bg '#000000'
set -g status-left ''
#set -g status-right ''
set -g status-right '#[fg=#111111,bg=cyan]#S'
#set -g status-right '#[fg=#aaaaaa,bg=cyan]#S'
#Mark current window with a different color
set-window-option -g window-status-current-bg cyan
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

#use arrow keys to move between panes
bind-key Up    select-pane -U
bind-key Down  select-pane -D
bind-key Left  select-pane -L
bind-key Right select-pane -R

#reload tmux config
#bind r source-file $HOME/.tmux.conf

#set -g pane-border-fg        white
#set -g pane-active-border-fg yellow

#vim like copy key bindings for tmux
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel

# resize panes like vim
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

# Copy mode
set-window-option -g mode-keys vi
set-option buffer-limit 10
unbind-key M-NPage      ; bind-key -n M-NPage       copy-mode
unbind-key M-PPage      ; bind-key -n M-PPage       copy-mode
unbind-key M-i          ; bind-key -n M-i       paste-buffer
unbind-key -t vi-copy M-{   ; bind-key -t vi-copy M-{   begin-selection
unbind-key -t vi-copy M-}   ; bind-key -t vi-copy M-}   copy-selection
unbind-key -t vi-copy Home  ; bind-key -t vi-copy Home  start-of-line
unbind-key -t vi-copy End   ; bind-key -t vi-copy End   end-of-line
unbind-key -t vi-copy b     ; bind-key -t vi-copy b     rectangle-toggle



### EXPERIMENTAL. Don't copy commands in this section
#bind-key R respawn-window
# set global r-o-e so that initial window of initial session gets it
# set -g set-remain-on-exit on
#
# # create a session and its windows/panes
# new -n estruct ls
# neww -n estruct2 ls
# splitw -v -p 50 -t 0 ls
#
# # restore global r-o-e
# set -g set-remain-on-exit off
#
# # let session r-o-e inherit from global value for future windows
# set -u set-remain-on-exit

#EXPERIMENTAL END
